#####################################
#            Created by             #
#                SBR                #
#               zzsxd               #
#####################################
import os
import telebot
from threading import Lock
from db import DB
from frontend import Bot_inline_btns
from backend import TempUserData, DbAct

####################################################################
tg_api = '6667593230:AAH2ZgrEVgdE4DEt49ksZ-qD1ThJkEXIPag'
db_name = 'db.sqlite3'
xlsx_path = 'dump.xlsx'
image_folder = 'photos'
bot = telebot.TeleBot(tg_api)


####################################################################


def main():
    @bot.message_handler(commands=['start'])
    def start_msg(message):
        #print(f'{message.from_user.first_name}, {message.from_user.last_name}')  # –∏–º—è —Ñ–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        buttons = Bot_inline_btns()
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç!üëã\n'
                                          '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–∫—É–ø–∫—Éüñ§\n'
                                          '–ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è –≤–∞—Å –ø—Ä–∏—è—Ç–Ω—ã–π –±–æ–Ω—É—Å, '
                                          '—á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ, –Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤üòä\n'
                                          '–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–∫–∞–∑–æ–º '
                                          '—Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–ºüë®‚Äçüíª\n'
                                          '–ú—ã –ø–æ–º–æ–∂–µ–º –≤ —Ä–µ—à–µ–Ω–∏–∏ –ª—é–±–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞!', reply_markup=buttons.start_btns())

    @bot.message_handler(content_types=['text', 'photo', 'contact'])
    def text(message):
        user_input = message.text
        user_id = message.chat.id
        user_current_action = temp_user_data.temp_data(user_id)[user_id][0]
        if user_current_action == 0:
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –æ—Ç–∑—ã–≤–∞')
            contact = message.chat.id
            temp_user_data.temp_data(message.chat.id)[message.chat.id][0] = 1
        elif user_current_action == 1:
            temp_user_data.temp_data(user_id)[user_id][2] = user_input
            photo_id = message.photo[-1].file_id
            photo_file = bot.get_file(photo_id)
            photo_bytes = bot.download_file(photo_file.file_path)
            temp_user_data.temp_data(user_id)[user_id][2] = photo_bytes
            bot.send_message(message.chat.id, '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...')
            db_actions.add_review(temp_user_data.temp_data(message.chat.id)[message.chat.id][1:])
            topic_id = telebot.TeleBot.create_forum_topic(bot, chat_id=-1002003996301,
                                                          name=f'{message.from_user.first_name} {message.from_user.last_name} –û–¢–ó–´–í',
                                                          icon_color=0x6FB9F0).message_thread_id
            bot.forward_message(chat_id=-1002003996301, from_chat_id=message.chat.id, message_id=message.id, message_thread_id=topic_id)
        elif user_current_action == 2:
            bot.send_message(message.chat.id, '–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! –û–∂–∏–¥–∞–π—Ç–µ...')
            topic_id = telebot.TeleBot.create_forum_topic(bot, chat_id=-1002003996301,
                                               name=f'{message.from_user.first_name} {message.from_user.last_name} –ü–†–û–ë–õ–ï–ú–ê –° –¢–û–í–ê–†–û–ú',
                                               icon_color=0x6FB9F0,
                                               icon_custom_emoji_id='T').message_thread_id
            bot.forward_message(chat_id=-1002003996301, from_chat_id=message.chat.id, message_id=message.id, message_thread_id=topic_id)

    @bot.callback_query_handler(func=lambda call: True)
    def callback(call):
        buttons = Bot_inline_btns()
        if call.data == 'take_gift':
            bot.send_message(call.message.chat.id,
                             '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞:\n1.–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É: "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º"',
                             reply_markup=buttons.share_number_btn())

            temp_user_data.temp_data(call.message.chat.id)[call.message.chat.id][0] = 0

        elif call.data == 'write_manager':
            bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–±—Ä–∞—â–µ–Ω–∏—è!',
                             reply_markup=buttons.write_manager_btns())
        elif call.data in ['another_question', 'complectation_product', 'quality_product']:
            if call.message and call.message.chat:
                bot.send_message(call.message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É!\n'
                                                       '–¢–∞–∫ –∂–µ –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â–∏–µ '
                                                       '–ø—Ä–æ–±–ª–µ–º—É.\n'
                                                       '–ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤!')
                temp_user_data.temp_data(call.message.chat.id)[call.message.chat.id][0] = 2

    # –∫–æ–Ω—Ç–∞–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    @bot.message_handler(content_types=['contact'])
    def text(message):
        if message.contact is not None:
            print(message.contact)

    bot.polling(none_stop=True)


if '__main__' == __name__:
    if not os.path.exists(image_folder):
        os.mkdir(image_folder)
    temp_user_data = TempUserData()
    db = DB('db.sqlite3', Lock())
    db_actions = DbAct(db, xlsx_path, image_folder)
    main()
